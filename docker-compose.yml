version: "3.7"
services:
  vault:
    image: vault:latest
    command: ["vault", "server", "-config=/vault/config"]
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "token"
      VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h"}'
      VAULT_SUPPLEMENTAL_CONFIG: '{"ui":true, "listener": {"tcp":{"address": "0.0.0.0:8200", "tls_disable": 1}}}'
      VAULT_ADDR: "http://127.0.0.1:8200"
    volumes:
      - vault-file-data:/vault/file
      - vault-unseal-data:/vault/unseal
      - ./devops/local/vault/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    cap_add:
      - IPC_LOCK

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - zookeeper-data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
    volumes:
      - kafka-data:/kafka

  akhq:
    image: tchiotludo/akhq:latest
    environment:
      AKHQ_CONFIGURATION: >
        akhq:
          connections:
            kafka-cluster-kafka-bootstrap:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8080:8080

  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

volumes:
  redis-data:
  kafka-data:
  zookeeper-data:
  vault-file-data:
  vault-unseal-data:
