// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * 
 *
 * @schema attributemanifest
 */
export class attributemanifest extends ApiObject {
  /**
   * Defines a "attributemanifest" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: attributemanifestOptions = {}) {
    super(scope, name, {
      ...options,
      kind: 'attributemanifest',
      apiVersion: 'config.istio.io/v1alpha2',
    });
  }
}

/**
 * @schema attributemanifest
 */
export interface attributemanifestOptions {
  /**
   * Describes the rules used to configure Mixer's policy and telemetry features. See more details at: https://istio.io/docs/reference/config/policy-and-telemetry/istio.policy.v1beta1.html
   *
   * @schema attributemanifest#spec
   */
  readonly spec?: AttributemanifestSpec;

}

/**
 * Describes the rules used to configure Mixer's policy and telemetry features. See more details at: https://istio.io/docs/reference/config/policy-and-telemetry/istio.policy.v1beta1.html
 *
 * @schema AttributemanifestSpec
 */
export interface AttributemanifestSpec {
  /**
   * The set of attributes this Istio component will be responsible for producing at runtime.
   *
   * @schema AttributemanifestSpec#attributes
   */
  readonly attributes?: { [key: string]: AttributemanifestSpecAttributes };

  /**
   * Name of the component producing these attributes.
   *
   * @schema AttributemanifestSpec#name
   */
  readonly name?: string;

  /**
   * The revision of this document.
   *
   * @schema AttributemanifestSpec#revision
   */
  readonly revision?: string;

}

/**
 * @schema AttributemanifestSpecAttributes
 */
export interface AttributemanifestSpecAttributes {
  /**
   * A human-readable description of the attribute's purpose.
   *
   * @schema AttributemanifestSpecAttributes#description
   */
  readonly description?: string;

  /**
   * The type of data carried by this attribute.
   *
   * @schema AttributemanifestSpecAttributes#valueType
   */
  readonly valueType?: AttributemanifestSpecAttributesValueType;

}

/**
 * The type of data carried by this attribute.
 *
 * @schema AttributemanifestSpecAttributesValueType
 */
export enum AttributemanifestSpecAttributesValueType {
  /** VALUE_TYPE_UNSPECIFIED */
  VALUE_TYPE_UNSPECIFIED = "VALUE_TYPE_UNSPECIFIED",
  /** STRING */
  STRING = "STRING",
  /** INT64 */
  INT64 = "INT64",
  /** DOUBLE */
  DOUBLE = "DOUBLE",
  /** BOOL */
  BOOL = "BOOL",
  /** TIMESTAMP */
  TIMESTAMP = "TIMESTAMP",
  /** IP_ADDRESS */
  IP_ADDRESS = "IP_ADDRESS",
  /** EMAIL_ADDRESS */
  EMAIL_ADDRESS = "EMAIL_ADDRESS",
  /** URI */
  URI = "URI",
  /** DNS_NAME */
  DNS_NAME = "DNS_NAME",
  /** DURATION */
  DURATION = "DURATION",
  /** STRING_MAP */
  STRING_MAP = "STRING_MAP",
}

