name: CI/CD

on:
  push:
    branches:
      - "master"
      - "hotfix-*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to GHCR
        run: echo ${{ secrets.CICD_ACTION_TOKEN }} | docker login ghcr.io -u ThomasK33 --password-stdin
      - name: Set frontend build envs
        run: echo -n ${{ secrets.FRONTEND_BUILD_DOTENV }} | base64 -d > services/frontend/.env
      - name: Set Container Build Versions
        run: |
          echo BASE_VERSION=$(jq -r .version services/shared/package.json) >> $GITHUB_ENV

          echo BACKEND_VERSION=$(jq -r .version services/backend/package.json) >> $GITHUB_ENV
          echo FRONTEND_VERSION=$(jq -r .version services/frontend/package.json) >> $GITHUB_ENV
          echo FSM_VERSION=$(jq -r .version services/fsm/package.json) >> $GITHUB_ENV
          echo GSI_RECEIVER_VERSION=$(jq -r .version services/gsi-receiver/package.json) >> $GITHUB_ENV
          echo TWITCHBOT_VERSION=$(jq -r .version services/17kmmrbot/package.json) >> $GITHUB_ENV
          echo JOBS_VERSION=$(jq -r .version services/jobs/package.json) >> $GITHUB_ENV
          echo HISTORIZATION_VERSION=$(jq -r .version services/historization/package.json) >> $GITHUB_ENV
      # Set pulling of images to --no-parallel, as apparently --ignore-pull-failures doesn't work in parallel mode
      # see:
      # - https://github.com/docker/compose/issues/7127
      # - https://github.com/docker/compose/pull/7134
      # - name: Pull all already existing images
      #   run: docker-compose -f build.docker-compose.yml pull --ignore-pull-failures
      - name: Pull all already existing images
        run: docker-compose -f build.docker-compose.yml pull --no-parallel --ignore-pull-failures
      - name: Build base image
        run: |
          docker-compose -f build.docker-compose.yml up -d base
          docker-compose -f build.docker-compose.yml down
      - name: Build remaining images
        run: |
          docker-compose -f build.docker-compose.yml up -d
          docker-compose -f build.docker-compose.yml down
      - name: Push images to GHCR
        run: docker-compose -f build.docker-compose.yml push

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: devops/kubernetes

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - uses: azure/setup-kubectl@v1
        with:
          version: "v1.19.2"

      - run: echo DOMAIN=fortify.gg >> $GITHUB_ENV
      - run: mkdir -p ~/.kube/ && touch ~/.kube/config && echo ${{ secrets.KUBECONFIG }} | base64 --decode > ~/.kube/config
      - run: touch .env && echo ${{ secrets.K8S_DOTENV }} | base64 --decode > .env
      - run: npm ci
      - run: npm run record
      - run: npm run build
      - run: kubectl apply -f dist/fortify.k8s.yaml
